plugins {
	id 'org.springframework.boot' version '2.3.1.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
	id 'checkstyle'
	id 'jacoco'
	id 'org.sonarqube' version '2.8'
}

group = 'com.paulasantana'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compile group: 'org.springframework.boot', name: 'spring-boot-starter-validation', version: '2.3.1.RELEASE'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'mysql:mysql-connector-java'
	testImplementation('org.springframework.boot:spring-boot-starter-test')
}

test {
	useJUnitPlatform()
	jacoco {
		destinationFile = file("$buildDir/jacoco/jacocoTest.exec")
		classDumpDir = file("$buildDir/jacoco/classpathdumps")
	}
}

jacoco {
	toolVersion = '0.8.5'
	reportsDir = file("$buildDir/reports/jacoco")
}

jacocoTestReport{
	dependsOn test

	reports {
		xml.enabled true
		csv.enabled false
		html.destination file("${buildDir}/jacocoHtml")
	}
}

jacocoTestCoverageVerification {
	violationRules {
		rule {
			limit {
				minimum = 0.0
			}
		}

		rule {
			enabled = false
			element = 'CLASS'
			includes = ['org.gradle.*']

			limit {
				counter = 'LINE'
				value = 'TOTALCOUNT'
				maximum = 0.3
			}
		}
	}
}

checkstyle {
	toolVersion = '8.10.1'
	showViolations = true
	ignoreFailures = false
}

tasks.withType(Checkstyle) {
	reports {
		xml.enabled true
		html.enabled false
		html.stylesheet resources.text.fromFile('config/xsl/checkstyle-custom.xsl')
	}
}

sonarqube {
	properties {
		property "sonar.projectName", "openCommunity"
		property "sonar.projectKey" , "openCommunity"
		property "sonar.host.url", "http://localhost:9000/"
		property "sonar.language", "java"
		property "sonar.login", "admin"
		property "sonar.password", "admin"
		property "sonar.sources", "src/main"
		property "sonar.tests", "src/test"
		property "sonar.sourceEncoding", "UTF-08"
		property "sonar.jacoco.reportsPaths", "$buildDir/jacoco/jacocoTest.exec"
		property "sonar.coverage.jacoco.xmlReportPaths", "$buildDir/reports/jacoco"
		property "sonar.java.coveragePlugin", "jacoco"
	}
}
